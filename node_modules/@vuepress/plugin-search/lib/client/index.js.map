{"version":3,"file":"index.js","sources":["../../src/client/composables/useSearchIndex.ts","../../src/client/utils/isQueryMatched.ts","../../src/client/composables/useSearchSuggestions.ts","../../src/client/composables/useSuggestionsFocus.ts","../../src/client/components/SearchBox.ts"],"sourcesContent":["import { SEARCH_INDEX } from '@internal/searchIndex'\nimport type { Ref } from 'vue'\nimport { ref } from 'vue'\nimport type { SearchIndex } from '../../shared/index.js'\n\nexport type SearchIndexRef = Ref<SearchIndex>\n\nexport const searchIndex = ref(SEARCH_INDEX)\n\nexport const useSearchIndex = (): SearchIndexRef => searchIndex\n\nif (__VUEPRESS_DEV__ && (import.meta.webpackHot || import.meta.hot)) {\n  __VUE_HMR_RUNTIME__.updateSearchIndex = (data: SearchIndex) => {\n    searchIndex.value = data\n  }\n}\n","// eslint-disable-next-line no-control-regex\nconst nonASCIIRegExp = /[^\\x00-\\x7F]/\n\nconst splitWords = (content: string): string[] =>\n  content\n    .split(/\\s+/g)\n    .map((str) => str.trim())\n    .filter((str) => !!str)\n\nconst escapeRegExp = (str: string): string =>\n  str.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n\nexport const isQueryMatched = (query: string, toMatch: string[]): boolean => {\n  const toMatchStr = toMatch.join(' ')\n  const words = splitWords(query)\n\n  if (nonASCIIRegExp.test(query)) {\n    // if the query has non-ASCII chars, treat as other languages\n    return words.some((word) => toMatchStr.toLowerCase().includes(word))\n  }\n\n  // if the query only has ASCII chars, treat as English\n  const hasTrailingSpace = query.endsWith(' ')\n  const searchRegex = new RegExp(\n    `${words\n      .map((word, index) => {\n        if (words.length === index + 1 && !hasTrailingSpace) {\n          // The last word - ok with the word being \"startsWith\"-like\n          return `(?=.*\\\\b${escapeRegExp(word)})`\n        }\n        // Not the last word - expect the whole word exactly\n        return `(?=.*\\\\b${escapeRegExp(word)}\\\\b)`\n      })\n      .join('')}.+`,\n    'gi',\n  )\n  return searchRegex.test(toMatchStr)\n}\n","import type { ComputedRef, Ref } from 'vue'\nimport { computed } from 'vue'\nimport type { PageHeader } from 'vuepress/shared'\nimport type { SearchIndex, SearchIndexItem } from '../../shared/index.js'\nimport { isQueryMatched } from '../utils/index.js'\n\nexport interface SearchSuggestion {\n  link: string\n  title: string\n  header?: string\n}\n\nexport const useSearchSuggestions = ({\n  searchIndex,\n  routeLocale,\n  query,\n  maxSuggestions,\n}: {\n  searchIndex: Ref<SearchIndex>\n  routeLocale: Ref<string>\n  query: Ref<string>\n  maxSuggestions: Ref<number>\n}): ComputedRef<SearchSuggestion[]> => {\n  // filter search index of current locale\n  const localeSearchIndex = computed(() =>\n    searchIndex.value.filter((item) => item.pathLocale === routeLocale.value),\n  )\n\n  return computed(() => {\n    const searchStr = query.value.trim().toLowerCase()\n    if (!searchStr) return []\n\n    const suggestions: SearchSuggestion[] = []\n\n    const matchPageHeader = (\n      searchIndexItem: SearchIndexItem,\n      header: PageHeader,\n    ): void => {\n      if (isQueryMatched(searchStr, [header.title])) {\n        suggestions.push({\n          link: `${searchIndexItem.path}#${header.slug}`,\n          title: searchIndexItem.title,\n          header: header.title,\n        })\n      }\n\n      for (const child of header.children) {\n        if (suggestions.length >= maxSuggestions.value) {\n          return\n        }\n\n        matchPageHeader(searchIndexItem, child)\n      }\n    }\n\n    for (const searchIndexItem of localeSearchIndex.value) {\n      if (suggestions.length >= maxSuggestions.value) {\n        break\n      }\n\n      // match page title and extra fields\n      if (\n        isQueryMatched(searchStr, [\n          searchIndexItem.title,\n          ...searchIndexItem.extraFields,\n        ])\n      ) {\n        suggestions.push({\n          link: searchIndexItem.path,\n          title: searchIndexItem.title,\n        })\n        continue\n      }\n\n      // match page headers\n      for (const header of searchIndexItem.headers) {\n        if (suggestions.length >= maxSuggestions.value) {\n          break\n        }\n\n        matchPageHeader(searchIndexItem, header)\n      }\n    }\n\n    return suggestions\n  })\n}\n","import type { Ref } from 'vue'\nimport { ref } from 'vue'\n\nexport const useSuggestionsFocus = (\n  suggestions: Ref<unknown[]>,\n): {\n  focusIndex: Ref<number>\n  focusNext: () => void\n  focusPrev: () => void\n} => {\n  const focusIndex = ref(0)\n  const focusNext = (): void => {\n    if (focusIndex.value < suggestions.value.length - 1) {\n      focusIndex.value += 1\n    } else {\n      focusIndex.value = 0\n    }\n  }\n  const focusPrev = (): void => {\n    if (focusIndex.value > 0) {\n      focusIndex.value -= 1\n    } else {\n      focusIndex.value = suggestions.value.length - 1\n    }\n  }\n\n  return {\n    focusIndex,\n    focusNext,\n    focusPrev,\n  }\n}\n","import type { KeyOptions } from '@vuepress/helper/client'\nimport { useKeys, useLocale } from '@vuepress/helper/client'\nimport type { PropType } from 'vue'\nimport { computed, defineComponent, h, ref, toRefs } from 'vue'\nimport { useRouteLocale, useRouter } from 'vuepress/client'\nimport type { SearchSuggestion } from '../composables/index.js'\nimport {\n  useSearchIndex,\n  useSearchSuggestions,\n  useSuggestionsFocus,\n} from '../composables/index.js'\nimport type { SearchPluginLocaleConfig } from '../types.js'\n\nexport const SearchBox = defineComponent({\n  name: 'SearchBox',\n\n  props: {\n    locales: {\n      type: Object as PropType<SearchPluginLocaleConfig>,\n      default: () => ({}),\n    },\n\n    hotKeys: Array as PropType<(KeyOptions | string)[]>,\n\n    maxSuggestions: {\n      type: Number,\n      default: 5,\n    },\n  },\n\n  setup(props) {\n    const { locales, hotKeys, maxSuggestions } = toRefs(props)\n    const locale = useLocale(locales)\n\n    const router = useRouter()\n    const routeLocale = useRouteLocale()\n    const searchIndex = useSearchIndex()\n\n    const input = ref<HTMLInputElement | null>(null)\n    const isActive = ref(false)\n    const query = ref('')\n\n    const suggestions = useSearchSuggestions({\n      searchIndex,\n      routeLocale,\n      query,\n      maxSuggestions,\n    })\n    const { focusIndex, focusNext, focusPrev } =\n      useSuggestionsFocus(suggestions)\n\n    useKeys(hotKeys, () => {\n      input.value?.focus()\n    })\n\n    const showSuggestions = computed(\n      () => isActive.value && !!suggestions.value.length,\n    )\n    const onArrowUp = (): void => {\n      if (!showSuggestions.value) {\n        return\n      }\n      focusPrev()\n    }\n    const onArrowDown = (): void => {\n      if (!showSuggestions.value) {\n        return\n      }\n      focusNext()\n    }\n    const goTo = (index: number): void => {\n      if (!showSuggestions.value) {\n        return\n      }\n\n      const suggestion = suggestions.value[index] as\n        | SearchSuggestion\n        | undefined\n\n      if (suggestion)\n        void router.push(suggestion.link).then(() => {\n          query.value = ''\n          focusIndex.value = 0\n        })\n    }\n\n    return () =>\n      h(\n        'form',\n        {\n          class: 'search-box',\n          role: 'search',\n        },\n        [\n          h('input', {\n            ref: input,\n            type: 'search',\n            placeholder: locale.value.placeholder,\n            autocomplete: 'off',\n            spellcheck: false,\n            value: query.value,\n            onFocus: () => {\n              isActive.value = true\n            },\n            onBlur: () => {\n              isActive.value = false\n            },\n            onInput: (event) => {\n              query.value = (event.target as HTMLInputElement).value\n            },\n            onKeydown: (event) => {\n              switch (event.key) {\n                case 'ArrowUp': {\n                  onArrowUp()\n                  break\n                }\n                case 'ArrowDown': {\n                  onArrowDown()\n                  break\n                }\n                case 'Enter': {\n                  event.preventDefault()\n                  goTo(focusIndex.value)\n                  break\n                }\n                default: {\n                  // do nothing\n                }\n              }\n            },\n          }),\n          showSuggestions.value &&\n            h(\n              'ul',\n              {\n                class: 'suggestions',\n                onMouseleave: () => {\n                  focusIndex.value = -1\n                },\n              },\n              suggestions.value.map(({ link, title, header }, index) =>\n                h(\n                  'li',\n                  {\n                    class: [\n                      'suggestion',\n                      {\n                        focus: focusIndex.value === index,\n                      },\n                    ],\n                    onMouseenter: () => {\n                      focusIndex.value = index\n                    },\n                    onMousedown: () => {\n                      goTo(index)\n                    },\n                  },\n                  h(\n                    'a',\n                    {\n                      href: link,\n                      onClick: (event) => {\n                        event.preventDefault()\n                      },\n                    },\n                    [\n                      h(\n                        'span',\n                        {\n                          class: 'page-title',\n                        },\n                        title,\n                      ),\n                      header &&\n                        h('span', { class: 'page-header' }, `> ${header}`),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n        ],\n      )\n  },\n})\n"],"names":["searchIndex","ref","SEARCH_INDEX","useSearchIndex","data","nonASCIIRegExp","splitWords","content","str","escapeRegExp","isQueryMatched","query","toMatch","toMatchStr","words","word","hasTrailingSpace","index","useSearchSuggestions","routeLocale","maxSuggestions","localeSearchIndex","computed","item","searchStr","suggestions","matchPageHeader","searchIndexItem","header","child","useSuggestionsFocus","focusIndex","SearchBox","defineComponent","props","locales","hotKeys","toRefs","locale","useLocale","router","useRouter","useRouteLocale","input","isActive","focusNext","focusPrev","useKeys","showSuggestions","onArrowUp","onArrowDown","goTo","suggestion","h","event","link","title"],"mappings":"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"}