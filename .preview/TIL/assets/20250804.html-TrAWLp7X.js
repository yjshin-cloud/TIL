import{_ as n,c as a,a as e,o as p}from"./app-D9gGdB3y.js";const l={};function t(i,s){return p(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="java-객체지향-프로그래밍-완전-정복-가이드-☕" tabindex="-1"><a class="header-anchor" href="#java-객체지향-프로그래밍-완전-정복-가이드-☕"><span>Java 객체지향 프로그래밍 완전 정복 가이드 ☕</span></a></h1><blockquote><p>멋쟁이 사자처럼 5일차 강의 정리 (2025.08.04)</p></blockquote><h2 id="🎯-객체지향-프로그래밍이란" tabindex="-1"><a class="header-anchor" href="#🎯-객체지향-프로그래밍이란"><span>🎯 객체지향 프로그래밍이란?</span></a></h2><p>객체지향 프로그래밍(OOP)은 <strong>현실 세계의 사물</strong>을 프로그램에서 <strong>객체</strong>로 모델링하는 프로그래밍 패러다임입니다.</p><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line">mindmap</span>
<span class="line">  root<span class="token text string">((OOP 핵심 개념))</span></span>
<span class="line">    캡슐화</span>
<span class="line">      데이터 은닉</span>
<span class="line">      접근 제어</span>
<span class="line">      정보 보호</span>
<span class="line">    </span>
<span class="line">    상속</span>
<span class="line">      코드 재사용</span>
<span class="line">      계층 구조</span>
<span class="line">      is-a 관계</span>
<span class="line">    </span>
<span class="line">    다형성</span>
<span class="line">      메서드 오버라이딩</span>
<span class="line">      인터페이스 구현</span>
<span class="line">      런타임 바인딩</span>
<span class="line">    </span>
<span class="line">    추상화</span>
<span class="line">      복잡성 숨기기</span>
<span class="line">      인터페이스 제공</span>
<span class="line">      구현 세부사항 분리</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-java-oop-클래스-계층-구조" tabindex="-1"><a class="header-anchor" href="#📊-java-oop-클래스-계층-구조"><span>📊 Java OOP 클래스 계층 구조</span></a></h2><h3 id="ai-챗봇-프로젝트를-통한-oop-이해" tabindex="-1"><a class="header-anchor" href="#ai-챗봇-프로젝트를-통한-oop-이해"><span>AI 챗봇 프로젝트를 통한 OOP 이해</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">classDiagram</span></span>
<span class="line">    <span class="token keyword">class</span> IGemini <span class="token punctuation">{</span></span>
<span class="line">        <span class="token annotation important">&lt;&lt;interface&gt;&gt;</span></span>
<span class="line">        +chat<span class="token text string">(String message)</span> String*</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">class</span> Chatbot <span class="token punctuation">{</span></span>
<span class="line">        <span class="token annotation important">&lt;&lt;abstract&gt;&gt;</span></span>
<span class="line">        -final String apiKey</span>
<span class="line">        -static final String GEMINI_URL</span>
<span class="line">        -static final HttpClient client</span>
<span class="line">        </span>
<span class="line">        #Chatbot<span class="token text string">(String apiKey)</span></span>
<span class="line">        +chat<span class="token text string">(String message)</span> String</span>
<span class="line">        -handleMessage<span class="token text string">(String message)</span> String</span>
<span class="line">        -callGemini<span class="token text string">(String apiKey, String text)</span> String</span>
<span class="line">        -changeResult<span class="token text string">(String result)</span> String</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">class</span> RoleChatbot <span class="token punctuation">{</span></span>
<span class="line">        -final String role</span>
<span class="line">        </span>
<span class="line">        +RoleChatbot<span class="token text string">(String apiKey)</span></span>
<span class="line">        +RoleChatbot<span class="token text string">(String apiKey, String role)</span></span>
<span class="line">        +chat<span class="token text string">(String message)</span> String</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    IGemini <span class="token arrow operator">&lt;|..</span> Chatbot <span class="token operator">:</span> implements</span>
<span class="line">    Chatbot <span class="token arrow operator">&lt;|--</span> RoleChatbot <span class="token operator">:</span> extends</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🏗-인터페이스-interface" tabindex="-1"><a class="header-anchor" href="#🏗-인터페이스-interface"><span>🏗 인터페이스 (Interface)</span></a></h2><h3 id="igemini-인터페이스-설계" tabindex="-1"><a class="header-anchor" href="#igemini-인터페이스-설계"><span>IGemini 인터페이스 설계</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IGemini</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">chat</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>인터페이스의 특징:</strong></p><ul><li>모든 메서드는 기본적으로 <code>public abstract</code></li><li>구현체에서 반드시 구현해야 함</li><li>다중 상속이 가능함</li><li><strong>계약(Contract)</strong> 역할을 함</li></ul><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">graph</span> TD</span>
<span class="line">    A<span class="token text string">[IGemini Interface]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[계약 정의]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> C<span class="token text string">[chat 메서드 규약]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> D<span class="token text string">[모든 구현체는 이 규약을 따라야 함]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> A <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#e3f2fd</span></span>
<span class="line">    <span class="token keyword">style</span> B <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f3e5f5</span></span>
<span class="line">    <span class="token keyword">style</span> C <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#e8f5e8</span></span>
<span class="line">    <span class="token keyword">style</span> D <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#fff3e0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎨-추상-클래스-abstract-class" tabindex="-1"><a class="header-anchor" href="#🎨-추상-클래스-abstract-class"><span>🎨 추상 클래스 (Abstract Class)</span></a></h2><h3 id="chatbot-추상-클래스-분석" tabindex="-1"><a class="header-anchor" href="#chatbot-추상-클래스-분석"><span>Chatbot 추상 클래스 분석</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Chatbot</span> <span class="token keyword">implements</span> <span class="token class-name">IGemini</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 공통 필드</span></span>
<span class="line">    <span class="token keyword">final</span> <span class="token class-name">String</span> apiKey<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 생성자</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token class-name">Chatbot</span><span class="token punctuation">(</span><span class="token class-name">String</span> apiKey<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>apiKey <span class="token operator">=</span> apiKey<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 구현된 메서드 (템플릿 메서드 패턴)</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">chat</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> templateMessage <span class="token operator">=</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> geminiResponse <span class="token operator">=</span> <span class="token function">callGemini</span><span class="token punctuation">(</span>apiKey<span class="token punctuation">,</span> templateMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">changeResult</span><span class="token punctuation">(</span>geminiResponse<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// private 메서드들...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>추상 클래스 vs 인터페이스:</strong></p><table><thead><tr><th>구분</th><th>추상 클래스</th><th>인터페이스</th></tr></thead><tbody><tr><td>상속</td><td>단일 상속</td><td>다중 구현</td></tr><tr><td>메서드</td><td>구현된 메서드 + 추상 메서드</td><td>기본적으로 추상 메서드</td></tr><tr><td>필드</td><td>인스턴스 변수 가능</td><td>static final만 가능</td></tr><tr><td>생성자</td><td>가능</td><td>불가능</td></tr></tbody></table><h2 id="🔄-템플릿-메서드-패턴" tabindex="-1"><a class="header-anchor" href="#🔄-템플릿-메서드-패턴"><span>🔄 템플릿 메서드 패턴</span></a></h2><p>Chatbot 클래스의 <code>chat</code> 메서드는 <strong>템플릿 메서드 패턴</strong>을 사용합니다:</p><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">sequenceDiagram</span></span>
<span class="line">    <span class="token keyword">participant</span> Client</span>
<span class="line">    <span class="token keyword">participant</span> Chatbot</span>
<span class="line">    <span class="token keyword">participant</span> RoleChatbot</span>
<span class="line">    <span class="token keyword">participant</span> GeminiAPI</span>
<span class="line">    </span>
<span class="line">    Client<span class="token arrow operator">-&gt;&gt;</span>RoleChatbot<span class="token operator">:</span> chat<span class="token text string">(&quot;안녕하세요&quot;)</span></span>
<span class="line">    RoleChatbot<span class="token arrow operator">-&gt;&gt;</span>RoleChatbot<span class="token operator">:</span> 빈 메시지 검증</span>
<span class="line">    RoleChatbot<span class="token arrow operator">-&gt;&gt;</span>Chatbot<span class="token operator">:</span> super.chat<span class="token text string">(message + role)</span></span>
<span class="line">    Chatbot<span class="token arrow operator">-&gt;&gt;</span>Chatbot<span class="token operator">:</span> handleMessage<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    Chatbot<span class="token arrow operator">-&gt;&gt;</span>GeminiAPI<span class="token operator">:</span> callGemini<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    GeminiAPI<span class="token arrow operator">-&gt;&gt;</span>Chatbot<span class="token operator">:</span> JSON 응답</span>
<span class="line">    Chatbot<span class="token arrow operator">-&gt;&gt;</span>Chatbot<span class="token operator">:</span> changeResult<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    Chatbot<span class="token arrow operator">-&gt;&gt;</span>RoleChatbot<span class="token operator">:</span> 처리된 응답</span>
<span class="line">    RoleChatbot<span class="token arrow operator">-&gt;&gt;</span>Client<span class="token operator">:</span> 최종 응답</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="👶-구체-클래스-concrete-class" tabindex="-1"><a class="header-anchor" href="#👶-구체-클래스-concrete-class"><span>👶 구체 클래스 (Concrete Class)</span></a></h2><h3 id="rolechatbot-클래스-구현" tabindex="-1"><a class="header-anchor" href="#rolechatbot-클래스-구현"><span>RoleChatbot 클래스 구현</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RoleChatbot</span> <span class="token keyword">extends</span> <span class="token class-name">Chatbot</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> role<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 기본 생성자</span></span>
<span class="line">    <span class="token class-name">RoleChatbot</span><span class="token punctuation">(</span><span class="token class-name">String</span> apiKey<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>apiKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>role <span class="token operator">=</span> <span class="token string">&quot;너는 위로를 위한 챗봇이야. 200자 이내로 감정적 위로를 위한 내용으로 답변해줘.&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 역할 지정 생성자</span></span>
<span class="line">    <span class="token class-name">RoleChatbot</span><span class="token punctuation">(</span><span class="token class-name">String</span> apiKey<span class="token punctuation">,</span> <span class="token class-name">String</span> role<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>apiKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>role <span class="token operator">=</span> role<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">chat</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;빈 질문은 안 됩니다!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">chat</span><span class="token punctuation">(</span><span class="token string">&quot;%s. %s&quot;</span><span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> role<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>핵심 OOP 개념들:</strong></p><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">graph</span> TD</span>
<span class="line">    A<span class="token text string">[RoleChatbot]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[상속 Inheritance]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> C<span class="token text string">[오버라이딩 Override]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> D<span class="token text string">[캡슐화 Encapsulation]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> E<span class="token text string">[생성자 오버로딩]</span></span>
<span class="line">    </span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> B1<span class="token text string">[Chatbot을 extends]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> C1<span class="token text string">[chat 메서드 재정의]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> D1<span class="token text string">[private final String role]</span></span>
<span class="line">    E <span class="token arrow operator">--&gt;</span> E1<span class="token text string">[2가지 생성자 제공]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> A <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#c8e6c9</span></span>
<span class="line">    <span class="token keyword">style</span> B <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#bbdefb</span></span>
<span class="line">    <span class="token keyword">style</span> C <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f8bbd9</span></span>
<span class="line">    <span class="token keyword">style</span> D <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#ffe0b2</span></span>
<span class="line">    <span class="token keyword">style</span> E <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#d1c4e9</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🌐-http-통신과-api-연동" tabindex="-1"><a class="header-anchor" href="#🌐-http-통신과-api-연동"><span>🌐 HTTP 통신과 API 연동</span></a></h2><h3 id="gemini-api-연동-구조" tabindex="-1"><a class="header-anchor" href="#gemini-api-연동-구조"><span>Gemini API 연동 구조</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">flowchart</span> LR</span>
<span class="line">    A<span class="token text string">[사용자 입력]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[RoleChatbot]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> C<span class="token text string">[메시지 + 역할 결합]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> D<span class="token text string">[JSON 형태로 변환]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> E<span class="token text string">[HTTP POST 요청]</span></span>
<span class="line">    E <span class="token arrow operator">--&gt;</span> F<span class="token text string">[Gemini API]</span></span>
<span class="line">    F <span class="token arrow operator">--&gt;</span> G<span class="token text string">[JSON 응답]</span></span>
<span class="line">    G <span class="token arrow operator">--&gt;</span> H<span class="token text string">[텍스트 추출]</span></span>
<span class="line">    H <span class="token arrow operator">--&gt;</span> I<span class="token text string">[사용자에게 반환]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> F <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#4caf50</span></span>
<span class="line">    <span class="token keyword">style</span> B <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#2196f3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="http-요청-처리-코드-분석" tabindex="-1"><a class="header-anchor" href="#http-요청-처리-코드-분석"><span>HTTP 요청 처리 코드 분석</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 1. 메시지를 JSON 형태로 변환</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        {</span>
<span class="line">            &quot;contents&quot;: [</span>
<span class="line">              {</span>
<span class="line">                &quot;parts&quot;: [</span>
<span class="line">                  {</span>
<span class="line">                    &quot;text&quot;: &quot;%s&quot;</span>
<span class="line">                  }</span>
<span class="line">                ]</span>
<span class="line">              }</span>
<span class="line">            ]</span>
<span class="line">        }</span>
<span class="line">        &quot;&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. HTTP 요청 전송</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">callGemini</span><span class="token punctuation">(</span><span class="token class-name">String</span> apiKey<span class="token punctuation">,</span> <span class="token class-name">String</span> text<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">HttpRequest</span> request <span class="token operator">=</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token constant">URI</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token constant">GEMINI_URL</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;X-goog-api-key&quot;</span><span class="token punctuation">,</span> apiKey<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token class-name">HttpRequest<span class="token punctuation">.</span>BodyPublishers</span><span class="token punctuation">.</span><span class="token function">ofString</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">HttpResponse<span class="token punctuation">.</span>BodyHandlers</span><span class="token punctuation">.</span><span class="token function">ofString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3. 응답에서 텍스트 추출</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">changeResult</span><span class="token punctuation">(</span><span class="token class-name">String</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> result</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;text\\&quot;: \\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎮-실제-사용-예제" tabindex="-1"><a class="header-anchor" href="#🎮-실제-사용-예제"><span>🎮 실제 사용 예제</span></a></h2><h3 id="geminiver3-메인-클래스" tabindex="-1"><a class="header-anchor" href="#geminiver3-메인-클래스"><span>GeminiVer3 메인 클래스</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GeminiVer3</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 환경변수에서 API 키 가져오기</span></span>
<span class="line">        <span class="token class-name">String</span> apiKey <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">&quot;GEMINI_API_KEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;당신과 상담할 사람을 서술해보세요 : &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 동적으로 역할 설정</span></span>
<span class="line">        <span class="token class-name">Chatbot</span> chatbot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RoleChatbot</span><span class="token punctuation">(</span>apiKey<span class="token punctuation">,</span> </span>
<span class="line">            sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;라고 설명된 사람이 대답하는 듯이 해줘.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 대화 루프</span></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;질문을 입력하세요 : &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">String</span> question <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>question<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;종료&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;대화 종료&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            </span>
<span class="line">            <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">String</span> resp <span class="token operator">=</span> chatbot<span class="token punctuation">.</span><span class="token function">chat</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🛠-개발-도구와-ai-활용" tabindex="-1"><a class="header-anchor" href="#🛠-개발-도구와-ai-활용"><span>🛠 개발 도구와 AI 활용</span></a></h2><h3 id="추천-ai-개발-도구들" tabindex="-1"><a class="header-anchor" href="#추천-ai-개발-도구들"><span>추천 AI 개발 도구들</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">graph</span> TD</span>
<span class="line">    A<span class="token text string">[AI 코딩 도구]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[Gemini Code Assist]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> C<span class="token text string">[GitHub Copilot]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> D<span class="token text string">[Claude AI]</span></span>
<span class="line">    </span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> E<span class="token text string">[일일 6,000 코드 요청]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> F<span class="token text string">[240 채팅 요청]</span></span>
<span class="line">    </span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> G<span class="token text string">[IDE 통합]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> H<span class="token text string">[실시간 코드 완성]</span></span>
<span class="line">    </span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> I<span class="token text string">[코드 리뷰]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> J<span class="token text string">[아키텍처 설계]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> A <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#e3f2fd</span></span>
<span class="line">    <span class="token keyword">style</span> B <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#c8e6c9</span></span>
<span class="line">    <span class="token keyword">style</span> C <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#fff3e0</span></span>
<span class="line">    <span class="token keyword">style</span> D <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f3e5f5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="추가-api-서비스들" tabindex="-1"><a class="header-anchor" href="#추가-api-서비스들"><span>추가 API 서비스들</span></a></h3><ul><li><strong><a href="https://api.together.ai/" target="_blank" rel="noopener noreferrer">Together AI</a></strong>: 다양한 오픈소스 모델</li><li><strong><a href="https://groq.com/" target="_blank" rel="noopener noreferrer">Groq</a></strong>: 초고속 추론 서비스</li><li><strong><a href="https://openrouter.ai/models?q=free" target="_blank" rel="noopener noreferrer">OpenRouter</a></strong>: 무료 모델 제공</li></ul><h2 id="🎓-oop-설계-원칙-solid" tabindex="-1"><a class="header-anchor" href="#🎓-oop-설계-원칙-solid"><span>🎓 OOP 설계 원칙 (SOLID)</span></a></h2><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">graph</span> TD</span>
<span class="line">    A<span class="token text string">[SOLID 원칙]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[S - Single Responsibility]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> C<span class="token text string">[O - Open/Closed]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> D<span class="token text string">[L - Liskov Substitution]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> E<span class="token text string">[I - Interface Segregation]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> F<span class="token text string">[D - Dependency Inversion]</span></span>
<span class="line">    </span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> B1<span class="token text string">[한 클래스는 하나의 책임만]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> C1<span class="token text string">[확장에는 열려있고 수정에는 닫혀있어야]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> D1<span class="token text string">[자식 클래스는 부모 클래스를 대체할 수 있어야]</span></span>
<span class="line">    E <span class="token arrow operator">--&gt;</span> E1<span class="token text string">[클라이언트는 사용하지 않는 인터페이스에 의존하면 안됨]</span></span>
<span class="line">    F <span class="token arrow operator">--&gt;</span> F1<span class="token text string">[상위 모듈은 하위 모듈에 의존하면 안됨]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> A <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#ff9800</span></span>
<span class="line">    <span class="token keyword">style</span> B <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#4caf50</span></span>
<span class="line">    <span class="token keyword">style</span> C <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#2196f3</span></span>
<span class="line">    <span class="token keyword">style</span> D <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#9c27b0</span></span>
<span class="line">    <span class="token keyword">style</span> E <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f44336</span></span>
<span class="line">    <span class="token keyword">style</span> F <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#607d8b</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔍-예외-처리와-에러-핸들링" tabindex="-1"><a class="header-anchor" href="#🔍-예외-처리와-에러-핸들링"><span>🔍 예외 처리와 에러 핸들링</span></a></h2><h3 id="throws-vs-try-catch-패턴" tabindex="-1"><a class="header-anchor" href="#throws-vs-try-catch-패턴"><span>throws vs try-catch 패턴</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 1. throws로 예외 전파</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">chat</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 호출하는 쪽에서 예외 처리 책임</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. try-catch로 예외 처리</span></span>
<span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> resp <span class="token operator">=</span> chatbot<span class="token punctuation">.</span><span class="token function">chat</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>예외 처리 전략:</strong></p><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">flowchart</span> TD</span>
<span class="line">    A<span class="token text string">[예외 발생]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">{예외 타입}</span></span>
<span class="line">    </span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> C<span class="token text string">[체크 예외]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> D<span class="token text string">[언체크 예외]</span></span>
<span class="line">    </span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> E<span class="token text string">[반드시 처리해야 함]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> F<span class="token text string">[선택적 처리]</span></span>
<span class="line">    </span>
<span class="line">    E <span class="token arrow operator">--&gt;</span> G<span class="token text string">[try-catch 또는 throws]</span></span>
<span class="line">    F <span class="token arrow operator">--&gt;</span> H<span class="token text string">[RuntimeException 계열]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> C <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#ff5722</span></span>
<span class="line">    <span class="token keyword">style</span> D <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#ff9800</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🚀-실습-프로젝트-확장-아이디어" tabindex="-1"><a class="header-anchor" href="#🚀-실습-프로젝트-확장-아이디어"><span>🚀 실습 프로젝트 확장 아이디어</span></a></h2><h3 id="_1-다양한-챗봇-타입-구현" tabindex="-1"><a class="header-anchor" href="#_1-다양한-챗봇-타입-구현"><span>1. 다양한 챗봇 타입 구현</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 번역 전문 챗봇</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TranslatorBot</span> <span class="token keyword">extends</span> <span class="token class-name">Chatbot</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> targetLanguage<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 구현...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 코딩 튜터 챗봇  </span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CodingTutorBot</span> <span class="token keyword">extends</span> <span class="token class-name">Chatbot</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> programmingLanguage<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 구현...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-챗봇-팩토리-패턴" tabindex="-1"><a class="header-anchor" href="#_2-챗봇-팩토리-패턴"><span>2. 챗봇 팩토리 패턴</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">classDiagram</span></span>
<span class="line">    <span class="token keyword">class</span> ChatbotFactory <span class="token punctuation">{</span></span>
<span class="line">        +createChatbot<span class="token text string">(String type, String apiKey)</span> Chatbot</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">class</span> ChatbotType <span class="token punctuation">{</span></span>
<span class="line">        <span class="token annotation important">&lt;&lt;enumeration&gt;&gt;</span></span>
<span class="line">        ROLE</span>
<span class="line">        TRANSLATOR</span>
<span class="line">        TUTOR</span>
<span class="line">        COUNSELOR</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    ChatbotFactory <span class="token arrow operator">--&gt;</span> ChatbotType</span>
<span class="line">    ChatbotFactory <span class="token arrow operator">--&gt;</span> Chatbot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-대화-히스토리-관리" tabindex="-1"><a class="header-anchor" href="#_3-대화-히스토리-관리"><span>3. 대화 히스토리 관리</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConversationManager</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> history<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Chatbot</span> chatbot<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> user<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        history<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveToFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> filename<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 대화 내역을 파일로 저장</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-학습-리소스-및-다음-단계" tabindex="-1"><a class="header-anchor" href="#📚-학습-리소스-및-다음-단계"><span>📚 학습 리소스 및 다음 단계</span></a></h2><h3 id="추천-학습-자료" tabindex="-1"><a class="header-anchor" href="#추천-학습-자료"><span>추천 학습 자료</span></a></h3><ul><li><strong><a href="https://docs.oracle.com/javase/" target="_blank" rel="noopener noreferrer">Java 공식 문서</a></strong>: 기본 개념 정리</li><li><strong><a href="https://www.oreilly.com/library/view/effective-java/9780134686097/" target="_blank" rel="noopener noreferrer">Effective Java</a></strong>: 고급 Java 기법</li><li><strong><a href="https://refactoring.guru/design-patterns" target="_blank" rel="noopener noreferrer">Design Patterns</a></strong>: 디자인 패턴 학습</li></ul><h3 id="다음-학습-단계" tabindex="-1"><a class="header-anchor" href="#다음-학습-단계"><span>다음 학습 단계</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line">timeline</span>
<span class="line">    title Java OOP 학습 로드맵</span>
<span class="line">    </span>
<span class="line">    기초 단계    <span class="token operator">:</span> 클래스와 객체</span>
<span class="line">                <span class="token operator">:</span> 상속과 다형성</span>
<span class="line">                <span class="token operator">:</span> 인터페이스와 추상클래스</span>
<span class="line">    </span>
<span class="line">    중급 단계    <span class="token operator">:</span> 디자인 패턴</span>
<span class="line">                <span class="token operator">:</span> 예외 처리</span>
<span class="line">                <span class="token operator">:</span> 컬렉션 프레임워크</span>
<span class="line">    </span>
<span class="line">    고급 단계    <span class="token operator">:</span> 멀티스레딩</span>
<span class="line">                <span class="token operator">:</span> 리플렉션</span>
<span class="line">                <span class="token operator">:</span> 제네릭과 람다</span>
<span class="line">    </span>
<span class="line">    실무 단계    <span class="token operator">:</span> Spring Framework</span>
<span class="line">                <span class="token operator">:</span> JPA/Hibernate</span>
<span class="line">                <span class="token operator">:</span> 테스트 코드 작성</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-핵심-포인트-요약" tabindex="-1"><a class="header-anchor" href="#💡-핵심-포인트-요약"><span>💡 핵심 포인트 요약</span></a></h2><h3 id="oop의-4대-원칙-실습-예제에서-확인" tabindex="-1"><a class="header-anchor" href="#oop의-4대-원칙-실습-예제에서-확인"><span>OOP의 4대 원칙 실습 예제에서 확인</span></a></h3><ol><li><strong>📦 캡슐화</strong>: <code>private</code> 필드와 <code>public</code> 메서드로 데이터 은닉</li><li><strong>🔗 상속</strong>: <code>Chatbot</code> → <code>RoleChatbot</code> 계층 구조</li><li><strong>🎭 다형성</strong>: 인터페이스를 통한 다양한 구현체 지원</li><li><strong>🎨 추상화</strong>: 복잡한 API 통신을 간단한 <code>chat()</code> 메서드로 제공</li></ol><h3 id="실무에서-중요한-개념들" tabindex="-1"><a class="header-anchor" href="#실무에서-중요한-개념들"><span>실무에서 중요한 개념들</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line">mindmap</span>
<span class="line">  root<span class="token text string">((실무 핵심))</span></span>
<span class="line">    예외 처리</span>
<span class="line">      Checked Exception</span>
<span class="line">      Unchecked Exception</span>
<span class="line">      Custom Exception</span>
<span class="line">    </span>
<span class="line">    API 연동</span>
<span class="line">      HTTP Client</span>
<span class="line">      JSON 처리</span>
<span class="line">      비동기 처리</span>
<span class="line">    </span>
<span class="line">    설계 패턴</span>
<span class="line">      Template Method</span>
<span class="line">      Factory Pattern</span>
<span class="line">      Builder Pattern</span>
<span class="line">    </span>
<span class="line">    테스트</span>
<span class="line">      Unit Test</span>
<span class="line">      Integration Test</span>
<span class="line">      Mock 객체</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><strong>Remember</strong>: 객체지향 프로그래밍은 단순히 문법을 아는 것이 아니라, <strong>현실 세계의 문제를 객체 간의 협력</strong>으로 해결하는 사고방식입니다.</p><p><em>&quot;좋은 설계는 변경에 유연하고, 확장 가능하며, 이해하기 쉬운 코드를 만듭니다!&quot;</em> ✨</p>`,67)])])}const o=n(l,[["render",t]]),r=JSON.parse('{"path":"/Edu/BootCamp/LikeLionCloudEngineering_4th/1_DailyStudy/Week_2/20250804.html","title":"Java 객체지향 프로그래밍 완전 정복 가이드 ☕","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1756307520000,"contributors":[{"name":"yjshin-cloud","username":"yjshin-cloud","email":"yjshin.cloud@gmail.com","commits":1,"url":"https://github.com/yjshin-cloud"},{"name":"yjshin.cloud","username":"","email":"yjshin.cloud@gmail.com","commits":1}],"changelog":[{"hash":"a25b1690258363e622bea4ff5ccd8e22aaa7ddef","time":1756307520000,"email":"yjshin.cloud@gmail.com","author":"yjshin.cloud","message":"TEST4"},{"hash":"7e6060715ffb5744d96aeb45c46ee1866dcca5ac","time":1755440406000,"email":"yjshin.cloud@gmail.com","author":"yjshin-cloud","message":"Create 20250804.md"}]},"filePathRelative":"Edu/BootCamp/LikeLionCloudEngineering_4th/1_DailyStudy/Week_2/20250804.md"}');export{o as comp,r as data};
