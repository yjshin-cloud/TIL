import{_ as s,c as a,a as e,o as p}from"./app-D9gGdB3y.js";const l={};function t(i,n){return p(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="go-언어-함수-완전-정복-가이드-🚀" tabindex="-1"><a class="header-anchor" href="#go-언어-함수-완전-정복-가이드-🚀"><span>Go 언어 함수 완전 정복 가이드 🚀</span></a></h1><blockquote><p>Go Functions Part One 강의 내용 정리</p></blockquote><h2 id="📊-go-언어의-기본-타입-시스템" tabindex="-1"><a class="header-anchor" href="#📊-go-언어의-기본-타입-시스템"><span>📊 Go 언어의 기본 타입 시스템</span></a></h2><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">graph</span> TD</span>
<span class="line">    A<span class="token text string">[Go 데이터 타입]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[기본 타입]</span></span>
<span class="line">    A <span class="token arrow operator">--&gt;</span> C<span class="token text string">[복합 타입]</span></span>
<span class="line">    </span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> D<span class="token text string">[String]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> E<span class="token text string">[Boolean]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> F<span class="token text string">[숫자 타입]</span></span>
<span class="line">    </span>
<span class="line">    F <span class="token arrow operator">--&gt;</span> G<span class="token text string">[int]</span></span>
<span class="line">    F <span class="token arrow operator">--&gt;</span> H<span class="token text string">[int8, int16, int32, int64]</span></span>
<span class="line">    F <span class="token arrow operator">--&gt;</span> I<span class="token text string">[uint8, uint16, uint32, uint64]</span></span>
<span class="line">    </span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> J<span class="token text string">[Array]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> K<span class="token text string">[Slices]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> L<span class="token text string">[Maps]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> M<span class="token text string">[Structs]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="주요-데이터-타입" tabindex="-1"><a class="header-anchor" href="#주요-데이터-타입"><span>주요 데이터 타입</span></a></h3><ul><li><strong>String</strong>: 문자열 데이터</li><li><strong>Boolean</strong>: true/false 값</li><li><strong>int</strong>: 정수 (기본적으로 사용)</li><li><strong>int8, int16, int32, int64</strong>: 다양한 크기의 정수</li><li><strong>uint</strong>: 부호 없는 정수</li><li><strong>Array &amp; Slices</strong>: 배열과 슬라이스</li></ul><blockquote><p>💡 <strong>초보자 팁</strong>: Computer Science 배경지식이 없어도 걱정하지 마세요! 기본적으로는 String, Boolean, int만 알면 시작할 수 있습니다.</p></blockquote><h2 id="🔧-go-함수의-기본-구조" tabindex="-1"><a class="header-anchor" href="#🔧-go-함수의-기본-구조"><span>🔧 Go 함수의 기본 구조</span></a></h2><h3 id="_1-기본-함수-선언" tabindex="-1"><a class="header-anchor" href="#_1-기본-함수-선언"><span>1. 기본 함수 선언</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token comment">// 잘못된 예시 (타입 미지정)</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">multiply</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">*</span> b  <span class="token comment">// ❌ 컴파일 에러 발생</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 올바른 예시 (타입 지정)</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">multiply</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">*</span> b  <span class="token comment">// ✅ 올바른 함수</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 간결한 표현 (같은 타입일 때)</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">multiply</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">*</span> b  <span class="token comment">// ✅ 더 간단한 표현</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-함수-선언-규칙" tabindex="-1"><a class="header-anchor" href="#_2-함수-선언-규칙"><span>2. 함수 선언 규칙</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">flowchart</span> LR</span>
<span class="line">    A<span class="token text string">[func]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[함수명]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> C<span class="token text string">[&quot;(매개변수 타입)&quot;]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> D<span class="token text string">[반환 타입]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> E<span class="token text string">[함수 본문]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> A <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#e1f5fe</span></span>
<span class="line">    <span class="token keyword">style</span> B <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f3e5f5</span></span>
<span class="line">    <span class="token keyword">style</span> C <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#e8f5e8</span></span>
<span class="line">    <span class="token keyword">style</span> D <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#fff3e0</span></span>
<span class="line">    <span class="token keyword">style</span> E <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#fce4ec</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Go 함수의 특징:</strong></p><ul><li>매개변수의 타입을 <strong>반드시</strong> 명시해야 함</li><li>반환값의 타입도 <strong>반드시</strong> 명시해야 함</li><li>컴파일러가 타입을 체크해서 안전성 보장</li></ul><h2 id="🎯-go만의-특별한-기능-다중-반환값" tabindex="-1"><a class="header-anchor" href="#🎯-go만의-특별한-기능-다중-반환값"><span>🎯 Go만의 특별한 기능: 다중 반환값</span></a></h2><h3 id="다중-반환값-함수-예시" tabindex="-1"><a class="header-anchor" href="#다중-반환값-함수-예시"><span>다중 반환값 함수 예시</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token comment">// 문자열의 길이와 대문자 변환을 동시에 반환</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">lenAndUpper</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> strings<span class="token punctuation">.</span><span class="token function">ToUpper</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 사용 예시</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    totalLength<span class="token punctuation">,</span> upperName <span class="token operator">:=</span> <span class="token function">lenAndUpper</span><span class="token punctuation">(</span><span class="token string">&quot;nico&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>totalLength<span class="token punctuation">)</span>  <span class="token comment">// 출력: 4</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>upperName<span class="token punctuation">)</span>    <span class="token comment">// 출력: NICO</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="값-무시하기-언더스코어-활용" tabindex="-1"><a class="header-anchor" href="#값-무시하기-언더스코어-활용"><span>값 무시하기 (언더스코어 활용)</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token comment">// 하나의 값만 필요할 때</span></span>
<span class="line">totalLength<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">lenAndUpper</span><span class="token punctuation">(</span><span class="token string">&quot;nico&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// upperName 무시</span></span>
<span class="line">fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>totalLength<span class="token punctuation">)</span>  <span class="token comment">// 출력: 4</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 또는</span></span>
<span class="line"><span class="token boolean">_</span><span class="token punctuation">,</span> upperName <span class="token operator">:=</span> <span class="token function">lenAndUpper</span><span class="token punctuation">(</span><span class="token string">&quot;nico&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// totalLength 무시</span></span>
<span class="line">fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>upperName<span class="token punctuation">)</span>   <span class="token comment">// 출력: NICO</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">graph</span> TD</span>
<span class="line">    A<span class="token text string">[lenAndUpper 함수 호출]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">{반환값 처리}</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> C<span class="token text string">[모든 값 사용]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> D<span class="token text string">[일부 값 무시]</span></span>
<span class="line">    </span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> E<span class="token text string">[&quot;length, upper := lenAndUpper(&#39;nico&#39;)&quot;]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> F<span class="token text string">[&quot;length, _ := lenAndUpper(&#39;nico&#39;)&quot;]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> G<span class="token text string">[&quot;_, upper := lenAndUpper(&#39;nico&#39;)&quot;]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> F <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#ffebee</span></span>
<span class="line">    <span class="token keyword">style</span> G <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#ffebee</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🌟-가변-인자-함수-variadic-functions" tabindex="-1"><a class="header-anchor" href="#🌟-가변-인자-함수-variadic-functions"><span>🌟 가변 인자 함수 (Variadic Functions)</span></a></h2><h3 id="무제한-매개변수-받기" tabindex="-1"><a class="header-anchor" href="#무제한-매개변수-받기"><span>무제한 매개변수 받기</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token comment">// 여러 개의 문자열을 받는 함수</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">repeatMe</span><span class="token punctuation">(</span>words <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 사용 예시</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">repeatMe</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;go&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;programming&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// 출력: [hello world go programming]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>가변 인자 함수의 특징:</strong></p><ul><li>타입 앞에 <code>...</code> 을 붙여서 선언</li><li>내부적으로 slice로 처리됨</li><li>원하는 만큼 인자를 전달할 수 있음</li></ul><h2 id="📦-go-표준-라이브러리의-강력함" tabindex="-1"><a class="header-anchor" href="#📦-go-표준-라이브러리의-강력함"><span>📦 Go 표준 라이브러리의 강력함</span></a></h2><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line">mindmap</span>
<span class="line">  root<span class="token text string">((Go 표준 라이브러리))</span></span>
<span class="line">    문자열 처리</span>
<span class="line">      strings</span>
<span class="line">      strconv</span>
<span class="line">      unicode</span>
<span class="line">    수학</span>
<span class="line">      math</span>
<span class="line">      math/big</span>
<span class="line">      math/rand</span>
<span class="line">    시간</span>
<span class="line">      time</span>
<span class="line">    네트워킹</span>
<span class="line">      net</span>
<span class="line">      net/http</span>
<span class="line">      net/url</span>
<span class="line">    데이터베이스</span>
<span class="line">      database/sql</span>
<span class="line">    암호화</span>
<span class="line">      crypto</span>
<span class="line">      crypto/tls</span>
<span class="line">    파일 처리</span>
<span class="line">      os</span>
<span class="line">      io</span>
<span class="line">      bufio</span>
<span class="line">    압축</span>
<span class="line">      archive/zip</span>
<span class="line">      compress/gzip</span>
<span class="line">    이미지</span>
<span class="line">      image</span>
<span class="line">      image/jpeg</span>
<span class="line">      image/png</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Go 표준 라이브러리 살펴보기:</strong></p><ul><li><a href="https://golang.org/pkg/" target="_blank" rel="noopener noreferrer">Go 공식 패키지 문서</a></li><li>데이터베이스, 암호화, 이미지 처리, 네트워킹 등 모든 것 포함</li><li>별도 설치 없이 바로 사용 가능</li></ul><h2 id="🎓-학습-포인트-정리" tabindex="-1"><a class="header-anchor" href="#🎓-학습-포인트-정리"><span>🎓 학습 포인트 정리</span></a></h2><h3 id="_1-함수-정의-단계별-가이드" tabindex="-1"><a class="header-anchor" href="#_1-함수-정의-단계별-가이드"><span>1. 함수 정의 단계별 가이드</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">flowchart</span> TD</span>
<span class="line">    A<span class="token text string">[1. func 키워드 사용]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[2. 함수명 정의]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> C<span class="token text string">[3. 매개변수와 타입 지정]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> D<span class="token text string">[4. 반환 타입 지정]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> E<span class="token text string">[5. 함수 본문 작성]</span></span>
<span class="line">    E <span class="token arrow operator">--&gt;</span> F<span class="token text string">[6. return 문 작성]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">style</span> A <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#e3f2fd</span></span>
<span class="line">    <span class="token keyword">style</span> B <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f1f8e9</span></span>
<span class="line">    <span class="token keyword">style</span> C <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#fff3e0</span></span>
<span class="line">    <span class="token keyword">style</span> D <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#fce4ec</span></span>
<span class="line">    <span class="token keyword">style</span> E <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f3e5f5</span></span>
<span class="line">    <span class="token keyword">style</span> F <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#e8eaf6</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-go-함수의-핵심-규칙" tabindex="-1"><a class="header-anchor" href="#_2-go-함수의-핵심-규칙"><span>2. Go 함수의 핵심 규칙</span></a></h3><table><thead><tr><th>규칙</th><th>설명</th><th>예시</th></tr></thead><tbody><tr><td>타입 명시 필수</td><td>모든 매개변수와 반환값의 타입을 반드시 지정</td><td><code>func add(a, b int) int</code></td></tr><tr><td>다중 반환 가능</td><td>여러 개의 값을 동시에 반환할 수 있음</td><td><code>func getData() (int, string)</code></td></tr><tr><td>가변 인자 지원</td><td>개수가 정해지지 않은 매개변수 처리 가능</td><td><code>func print(args ...string)</code></td></tr><tr><td>미사용 변수 금지</td><td>선언하고 사용하지 않으면 컴파일 에러</td><td><code>_</code>로 무시 처리</td></tr></tbody></table><h3 id="_3-일반적인-실수와-해결법" tabindex="-1"><a class="header-anchor" href="#_3-일반적인-실수와-해결법"><span>3. 일반적인 실수와 해결법</span></a></h3><h4 id="❌-흔한-실수들" tabindex="-1"><a class="header-anchor" href="#❌-흔한-실수들"><span>❌ 흔한 실수들</span></a></h4><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token comment">// 1. 타입 미지정</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">multiply</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 에러!</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">*</span> b</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 반환 타입 미지정</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">multiply</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 에러!</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">*</span> b</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3. 다중 반환값 처리 실수</span></span>
<span class="line">length <span class="token operator">:=</span> <span class="token function">lenAndUpper</span><span class="token punctuation">(</span><span class="token string">&quot;nico&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// 에러! 2개 값 반환하는데 1개만 받음</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="✅-올바른-해결법" tabindex="-1"><a class="header-anchor" href="#✅-올바른-해결법"><span>✅ 올바른 해결법</span></a></h4><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token comment">// 1. 타입 명시</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">multiply</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">*</span> b</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 다중 반환값 올바른 처리</span></span>
<span class="line">length<span class="token punctuation">,</span> upper <span class="token operator">:=</span> <span class="token function">lenAndUpper</span><span class="token punctuation">(</span><span class="token string">&quot;nico&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// 모두 받기</span></span>
<span class="line">length<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">lenAndUpper</span><span class="token punctuation">(</span><span class="token string">&quot;nico&quot;</span><span class="token punctuation">)</span>      <span class="token comment">// 일부만 받기</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🚀-실습-예제" tabindex="-1"><a class="header-anchor" href="#🚀-실습-예제"><span>🚀 실습 예제</span></a></h2><h3 id="기본-함수-연습" tabindex="-1"><a class="header-anchor" href="#기본-함수-연습"><span>기본 함수 연습</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;fmt&quot;</span></span>
<span class="line">    <span class="token string">&quot;strings&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 1. 단순 계산 함수</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">+</span> b</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 다중 반환값 함수</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">divideAndRemainder</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">/</span> b<span class="token punctuation">,</span> a <span class="token operator">%</span> b</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3. 가변 인자 함수</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>numbers <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span></span>
<span class="line">    total <span class="token operator">:=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> num <span class="token operator">:=</span> <span class="token keyword">range</span> numbers <span class="token punctuation">{</span></span>
<span class="line">        total <span class="token operator">+=</span> num</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> total</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 기본 함수 사용</span></span>
<span class="line">    result <span class="token operator">:=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;10 + 5 =&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 다중 반환값 함수 사용</span></span>
<span class="line">    quotient<span class="token punctuation">,</span> remainder <span class="token operator">:=</span> <span class="token function">divideAndRemainder</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;17 ÷ 5 =&quot;</span><span class="token punctuation">,</span> quotient<span class="token punctuation">,</span> <span class="token string">&quot;나머지&quot;</span><span class="token punctuation">,</span> remainder<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 가변 인자 함수 사용</span></span>
<span class="line">    total <span class="token operator">:=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;1+2+3+4+5 =&quot;</span><span class="token punctuation">,</span> total<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-추가-학습-가이드" tabindex="-1"><a class="header-anchor" href="#💡-추가-학습-가이드"><span>💡 추가 학습 가이드</span></a></h2><h3 id="다음-단계-학습-내용" tabindex="-1"><a class="header-anchor" href="#다음-단계-학습-내용"><span>다음 단계 학습 내용</span></a></h3><ul><li>함수형 프로그래밍 개념</li><li>고차 함수 (Higher-order functions)</li><li>클로저 (Closures)</li><li>메서드와 리시버</li><li>인터페이스와 함수</li></ul><h3 id="권장-연습-문제" tabindex="-1"><a class="header-anchor" href="#권장-연습-문제"><span>권장 연습 문제</span></a></h3><ol><li>팩토리얼 계산 함수 만들기</li><li>피보나치 수열 생성 함수 만들기</li><li>문자열 처리 유틸리티 함수 모음 만들기</li><li>계산기 함수 모음 만들기</li></ol><hr><p><strong>핵심 메시지:</strong></p><ul><li>Go는 타입을 명확히 지정해야 하는 <strong>강타입 언어</strong></li><li><strong>다중 반환값</strong>은 Go만의 독특한 장점</li><li><strong>표준 라이브러리</strong>가 매우 풍부함</li><li><strong>가변 인자 함수</strong>로 유연한 함수 작성 가능</li></ul><blockquote><p>🎯 <strong>Next Step</strong>: 함수 Part Two에서는 더 고급 함수 개념들을 다룰 예정입니다!</p></blockquote>`,51)])])}const o=s(l,[["render",t]]),r=JSON.parse('{"path":"/Programming_Languages/BackEnd/Go/NomadCoders/Getting_Started_with_Go_Quickly_and_Easily/2_20250817_Functions_Part1.html","title":"Go 언어 함수 완전 정복 가이드 🚀","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1756307520000,"contributors":[{"name":"yjshin-cloud","username":"yjshin-cloud","email":"yjshin.cloud@gmail.com","commits":3,"url":"https://github.com/yjshin-cloud"},{"name":"yjshin.cloud","username":"","email":"yjshin.cloud@gmail.com","commits":1}],"changelog":[{"hash":"a25b1690258363e622bea4ff5ccd8e22aaa7ddef","time":1756307520000,"email":"yjshin.cloud@gmail.com","author":"yjshin.cloud","message":"TEST4"},{"hash":"f5e749f6816193958b03ed283b6a41f2ef53f003","time":1755620285000,"email":"yjshin.cloud@gmail.com","author":"yjshin-cloud","message":"Rename Programming_Languages/BackEnd/Go/2_20250817_Functions_Part1.md to Programming_Languages/BackEnd/Go/NomadCoders/Getting_Started_with_Go_Quickly_and_Easily/2_20250817_Functions_Part1.md"},{"hash":"da31122c4f9181349de3129438bce68dde4bce9b","time":1755529865000,"email":"yjshin.cloud@gmail.com","author":"yjshin-cloud","message":"Rename 1_20250817_Functions_Part1.md to 2_20250817_Functions_Part1.md"},{"hash":"4691d28e1aa8f8dfa1eb0776c0272b3138fd5972","time":1755439053000,"email":"yjshin.cloud@gmail.com","author":"yjshin-cloud","message":"Create 1_20250817_Functions_Part1.md"}]},"filePathRelative":"Programming_Languages/BackEnd/Go/NomadCoders/Getting_Started_with_Go_Quickly_and_Easily/2_20250817_Functions_Part1.md"}');export{o as comp,r as data};
